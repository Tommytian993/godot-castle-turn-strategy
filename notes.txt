你把 `_unhandled_input` 移到这里是为了**统一管理玩家输入**！

## 为什么要这样做？

### 1. **职责分离**
- **Unit**：负责单位的状态和动作执行
- **PlayerActionManager**：负责玩家的输入处理和动作选择

### 2. **避免重复代码**
```gdscript
// 之前：每个Unit都有自己的输入处理
// Unit1: _unhandled_input -> 处理移动
// Unit2: _unhandled_input -> 处理移动  
// Unit3: _unhandled_input -> 处理移动

// 现在：统一在PlayerActionManager处理
// PlayerActionManager: _unhandled_input -> 处理所有单位的动作
```

### 3. **更好的架构**
```gdscript
// 新的流程：
// 1. 玩家点击 -> PlayerActionManager._unhandled_input
// 2. 获取鼠标位置 -> GridManager.get_mouse_grid_position()
// 3. 执行动作 -> action_manager.get_action("move_action").start_action()
// 4. 动作完成 -> on_action_finished 回调
```

### 4. **支持多单位**
```gdscript
// 将来可以轻松扩展：
// - 选择不同单位
// - 不同单位有不同动作
// - 统一的输入处理逻辑
```

## 实际好处

- **代码复用**：一个输入处理器处理所有单位
- **维护简单**：输入逻辑集中在一个地方
- **扩展性好**：容易添加新的输入处理
- **逻辑清晰**：Unit专注动作执行，PlayerActionManager专注输入

这就是为什么要把输入处理从Unit移到PlayerActionManager的原因！👍